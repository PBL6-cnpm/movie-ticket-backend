name: CI/CD for Movie Ticket Backend with Docker Compose

on:
  push:
    branches:
      - main

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: yarn install

      - name: Run lint
        run: yarn lint

      # - name: Run tests
      #   run: yarn test

  cd:
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install rsync and SSH client
        run: |
          sudo apt-get update
          sudo apt-get install -y rsync openssh-client

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.GCP_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.GCP_VM_IP }} >> ~/.ssh/known_hosts

      - name: Ensure destination folder exists on VM
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.GCP_SSH_USER }}@${{ secrets.GCP_VM_IP }} "
            mkdir -p /tmp/movie-ticket-backend
          "

      - name: Deploy to Compute Engine
        run: |
          # Ensure rsync exists on VM
          ssh -i ~/.ssh/id_rsa ${{ secrets.GCP_SSH_USER }}@${{ secrets.GCP_VM_IP }} "which rsync || (sudo apt-get update && sudo apt-get install -y rsync)"

          # Copy project to VM, exclude .env
          rsync -avz --delete --exclude '.env' -e "ssh -i ~/.ssh/id_rsa" . ${{ secrets.GCP_SSH_USER }}@${{ secrets.GCP_VM_IP }}:/tmp/movie-ticket-backend

          # Deploy inside VM
          ssh -i ~/.ssh/id_rsa ${{ secrets.GCP_SSH_USER }}@${{ secrets.GCP_VM_IP }} << 'EOF'
            if ! command -v docker compose &> /dev/null; then
              sudo apt-get update
              sudo apt-get install -y docker-compose-plugin
            fi

            cd /tmp/movie-ticket-backend

            # Copy .env có sẵn từ /resource vào thư mục project
            cp /resource/.env .env

            docker compose up -d --build

            # Cleanup temp files
            rm -rf /tmp/movie-ticket-backend
          EOF
